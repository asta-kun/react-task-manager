[{"/home/nani/Documents/projects/react/src/reportWebVitals.ts":"1","/home/nani/Documents/projects/react/src/index.tsx":"2","/home/nani/Documents/projects/react/src/App.tsx":"3","/home/nani/Documents/projects/react/src/containers/basePage.tsx":"4","/home/nani/Documents/projects/react/src/containers/basePage.style.ts":"5","/home/nani/Documents/projects/react/src/components/header.tsx":"6","/home/nani/Documents/projects/react/src/components/header.style.ts":"7","/home/nani/Documents/projects/react/src/modules/taskManager/index.tsx":"8","/home/nani/Documents/projects/react/src/modules/_router.tsx":"9"},{"size":425,"mtime":1609030776256,"results":"10","hashOfConfig":"11"},{"size":478,"mtime":1610216516914,"results":"12","hashOfConfig":"13"},{"size":221,"mtime":1610231480984,"results":"14","hashOfConfig":"11"},{"size":429,"mtime":1610224648464,"results":"15","hashOfConfig":"11"},{"size":181,"mtime":1610227115024,"results":"16","hashOfConfig":"11"},{"size":1195,"mtime":1610227933977,"results":"17","hashOfConfig":"11"},{"size":337,"mtime":1610227470203,"results":"18","hashOfConfig":"11"},{"size":140,"mtime":1610231503173,"results":"19","hashOfConfig":"11"},{"size":808,"mtime":1610232467268,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1uukpeq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rh48ad",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nani/Documents/projects/react/src/reportWebVitals.ts",["41"],"/home/nani/Documents/projects/react/src/index.tsx",[],"/home/nani/Documents/projects/react/src/App.tsx",[],"/home/nani/Documents/projects/react/src/containers/basePage.tsx",["42","43"],"import { Box } from '@material-ui/core';\nimport React, { ReactNode } from 'react';\nimport Header from '../components/header';\nimport useStyles from './basePage.style';\n\ntype BasePageProps = {\n  children: ReactNode;\n};\n\nconst BasePage = ({ children }: BasePageProps) => {\n  const classes = useStyles();\n  return (\n    <main className={classes.root}>\n      <Header />\n      {children}\n    </main>\n  );\n};\n\nexport default BasePage;\n","/home/nani/Documents/projects/react/src/containers/basePage.style.ts",[],"/home/nani/Documents/projects/react/src/components/header.tsx",["44"],"import { Button, Grid } from '@material-ui/core';\nimport React from 'react';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport useStyles from './header.style';\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <header>\n      <Grid container justify=\"space-between\" alignItems=\"center\" className={classes.root}>\n        <Grid item className={classes.left} xs={4}>\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <span>\n                <AccessAlarmIcon fontSize=\"large\" />\n              </span>\n            </Grid>\n            <Grid item>\n              <h1 className={classes.h1}>Task Manager</h1>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={2}>\n          <Grid container justify=\"space-around\">\n            <Grid item xs={5}>\n              <Button variant=\"outlined\" fullWidth>\n                Timer\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button variant=\"outlined\" fullWidth>\n                Stats\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </header>\n  );\n};\n\nexport default Header;\n","/home/nani/Documents/projects/react/src/components/header.style.ts",[],"/home/nani/Documents/projects/react/src/modules/taskManager/index.tsx",[],"/home/nani/Documents/projects/react/src/modules/_router.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":3,"column":25,"nodeType":"47","messageId":"48","endLine":3,"endColumn":57},{"ruleId":"49","severity":1,"message":"50","line":1,"column":10,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"46","line":10,"column":18,"nodeType":"47","messageId":"48","endLine":10,"endColumn":50},{"ruleId":"45","severity":1,"message":"46","line":6,"column":16,"nodeType":"47","messageId":"48","endLine":6,"endColumn":21},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar"]